{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,IAAKE,EAAMF,OAfjB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,eAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,eAV/C,oBAmBE,WACE,IACED,EACEM,KAAKP,MADPC,IAGF,OACE,qBAAKQ,UAAU,MAAf,SACGR,EACG,+DAAgCA,EAAhC,OACA,8DA5BZ,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.3a02770c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({\n      key: event.key,\n    });\n  };\n\n  render() {\n    const {\n      key,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {key\n          ? <p>{`The last pressed key is [${key}]`}</p>\n          : <p>Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}